name: Generated APK

env:
  # The name of the main module repository
  main_project_module: app

on:

  push:
    branches:
      - 'release/**'
    tags:
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto' # See 'Supported distributions' for available options
          java-version: '11'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Run Tests Build
      - name: Run gradle tests
        run: ./gradlew test

      # Run Build Project
      - name: Build gradle project
        run: ./gradlew build

      # Create APK Debug
      #- name: Build apk debug project (APK) - ${{ env.main_project_module }} module
      #   run: ./gradlew assembleDebug

      # Create APK Release
      - name: Build apk release project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew assemble

      - name: Apk file signature
        run: |
          java -jar ".github/lib/uber-apk-signer-1.3.0.jar" -a ${{ env.main_project_module }}/build/outputs/apk/release/ --out ${{ env.main_project_module }}/build/outputs/apk/release/signed

      # Upload Artifact Build
      # Noted For Output [main_project_module]/build/outputs/apk/debug/
       # Noted For Output [main_project_module]/build/outputs/apk/release/
      - name: Upload APK Release - ${{ env.repository_name }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - APK(s) release generated
          path: ${{ env.main_project_module }}/build/outputs/apk/release/signed
      
      - name: Set Env Artifact name
        run: |
          cd ${{ env.main_project_module }}/build/outputs/apk/release/signed
          files=(*)
          echo "signedapk=${files[0]%.*}" >> $GITHUB_ENV
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip --junk-paths my-artifact README.md

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ env.main_project_module }}/build/outputs/apk/release/signed/${{ env.signedapk }}.apk
